@property --piePercent {
    syntax: "<percentage>";
    initial-value: 0%;
    inherits: false;
}

#pies {
    display: flex;
    justify-content: center;
    padding-bottom: 10px;
    gap: 25px;
}

#pies > div {
    position: relative;
}

.pie {
    position: relative;
    height: 100px;
    width: 100px;
    border-radius: 50%;
    border: 2px solid black;
    background: conic-gradient(transparent var(--piePercent, 0%), var(--color) 0%);
    overflow: hidden;
    -webkit-mask-image: -webkit-radial-gradient(white, black);
    transition: 0.01s linear;
    cursor: pointer;
}

body.dark .pie {
    border-color: white;
}

.pie:hover, .edit-pie:hover {
    filter: brightness(1.2);
}

.start-pie {
    animation: timer-circle var(--time) linear 0s 1 forwards;
}

.pie > .pie-label {
    content: attr(data-current-time);
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 26px;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    width: 100%;
    text-align: center;
}

.edit-pie {
    position: absolute;
    top: 0;
    right: 0;
    width: 30px;
    height: 30px;
    border: 2px solid black;
    border-radius: 50%;
    background-color: black;
    background-image: url(../img/edit_black_24dp.svg);
    background-position: center;
    background-repeat: no-repeat;
    background-size: 18px;
    cursor: pointer;
}

body.dark .edit-pie {
    border-color: white;
}

#pies > div:nth-child(4n+1) {
    --color: var(--color1);
}

#pies > div:nth-child(4n+2) {
    --color: var(--color2);
}

#pies > div:nth-child(4n+3) {
    --color: var(--color3);
}

#pies > div:nth-child(4n+0) {
    --color: var(--color4);
}

/* TODO Break into 2 so we go from 4 to 3 to 2 */
@media screen and (max-width: 500px) {
    #pies > div:nth-child(4n+0) {
        display: none;
    }
}

@media screen and (max-width: 370px) {
    #pies > div:nth-child(4n+3) {
        display: none;
    }
}

@keyframes timer-circle {
    to {
        --piePercent: 100%;
    }
}
